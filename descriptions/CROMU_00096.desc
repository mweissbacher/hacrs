## Description
The LNK bug is a vulnerability in the Windows shell that allowed malware to execute from the USB drive with little or no user interaction. CVE-2010-2568 was patched by Microsoft in August 2010 and thought to be fixed until a security researcher reported in January of 2015 that even patched systems were still vulnerable to what is largely the same attack. 

CVE-2010-2568 was a logic bug in how the Windows shell displays icons for shortcut (.lnk) files. The shortcut file can direct Windows to load an icon from a dll file. In order to access the icon, Windows calls LoadLibrary() which allows code execution from the DLL. If the .lnk and .dll file are both located on a thumb drive, arbitrary code execution will occur as soon as Windows displays the contents of the drive (either via AutoRun or the user opening the drive to view files in Explorer). The patch issued by Microsoft in 2010 attempted to prevent this condition by checking to make sure the .dll file was in a valid Windows folder before loading it. However, an off by one error combined with faulty program logic allow a well crafted file name to pass all of the checks and still get loaded. 

This service recreates the spirit of that bug by implementing a basic memory based file system with a text based shell and loader. The ‘icon’ is represented by flavor text loaded from a pre-populated location in the file system. When an appropriately formatted shortcut file and companion flavor text file are uploaded, the loader will execute code from the uploaded library file when it attempts to display the flavor text during a file listing. 

### Feature List
This service implements a text based interactive shell. The user can execute several commands:

  'u' - Upload a new file
  'r' - Read an existing file
  'd' - Delete a file
  'l' - List the files in a directory recursively
  'g' - List the files in a directory with details and flavor text
  'c' - Create a new directory
  'w' - List the present working directory
  'h' - Change the working directory
  'x' - Exit the shell

The file system contains a system file containing default flavor text that cannot be accessed by the interactive shell. Flavor text files are a custom file format patterned after a simple executable file. 

Files can be of several different types: 
  FILE_TEXT       
  FILE_EXECUTABLE 
  FILE_IMAGE      
  FILE_LINK       
  FILE_RAW        
  FILE_LIBRARY    
  FILE_DIRECTORY  
  FILE_INVALID   

A LINK file will contain a reference to the target of the link. If the link target is a shared library file that contains flavor text, and if it meets several other requirements, the shell will load the shared library and use its reference section as flavor text when a long listing is performed on that file. 

The custom loader reads the shared library header, checks it for accuracy, and then executes the 'SharedLibraryMain' function. The object code in these shared libraries is a custom limited instruction set that allows reading from memory, writing to memory, and outputting values to STDOUT. 

