## Description

This is an instant messaging platform that allows users to sign up, log in, send and receive messages. There are two parts: server and client. The client provides the interface for users to interact with the system, and it talks to the server with a custom protocol. The client and the server communicate through IPC, and thus the server side interface isn't directly exposed. LulzChat supports 'protected' mode that uses Coffee algorithm for obfuscated communication.

### Feature List

This service supports the following features:

  1. **Register a new user**
  2. **Log in as a registered user**
  3. **Log out the current user**
  4. **List messages**
  5. **View a message**
  6. **Send a message**
  7. **Delete a message**

The server-side keeps track of users, queued messages, etc. whereas the client-side provides the interface for above-mentioned features. Each packet has a specific format containing the following:

  - Header
    - type: REQUEST or RESPONSE
    - command: register, login, list, view, send, delete
    - checksum
    - body length
  - Body
    - command body

Server responds with the following format:

  - Status code
  - Data length
  - Data
    - register: username, if successful
    - login: user_id + auth_code, if successful
    - list: list of messages (just metainfo, not contents)
    - view: message info (metainfo + content)
    - send: N/A
    - delete: remaining # of messages

The data structure used for each request command can be found in *request.h*.

Protected messages are obfuscated with Coffee algorithm that uses the key derived from each user's *auth_code* which is generated randomly when creating (registering) an account.

